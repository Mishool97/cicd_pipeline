name: Test CI/CD Pipeline v2

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run unit tests
        run: |
          pytest tests/unit

  building-docker-image:
    runs-on: ubuntu-latest
    needs: unit-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Log in to Azure Container Registry
        run: |
          echo ${{ secrets.AZURE_ACR_PASSWORD }} | docker login ${{ secrets.AZURE_ACR_USERNAME }}.azurecr.io --username ${{ secrets.AZURE_ACR_USERNAME }} --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t ${{ secrets.AZURE_ACR_USERNAME }}.azurecr.io/clickstream_generator:latest -f Dockerfile .
          docker push ${{ secrets.AZURE_ACR_USERNAME }}.azurecr.io/clickstream_generator:latest

  deploy-to-azure:
    runs-on: ubuntu-latest
    needs:
      - building-docker-image
      - unit-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: |
          terraform init
        working-directory: ./terraform
      
      - name: Import Existing Resource Group
        run: |
          terraform import azurerm_resource_group.rg /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ secrets.RESOURCE_GROUP }}
        working-directory: ./terraform

      - name: Terraform Apply
        env:
          TF_VAR_resource_group_name: ${{ secrets.RESOURCE_GROUP }}
          TF_VAR_function_app_name: ${{ secrets.FUNCTION_APP_NAME }}
          TF_VAR_storage_account_name: ${{ secrets.STORAGE_ACCOUNT }}
          TF_VAR_acr_name: ${{ secrets.AZURE_ACR_USERNAME }}
          TF_VAR_acr_image_tag: "latest"
        run: |
          terraform apply -auto-approve
        working-directory: ./terraform