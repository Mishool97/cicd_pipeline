name: CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      deploy-test:
        description: 'Deploy to Test Environment'
        required: false
        default: 'false'
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  setup-environment:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Azure CLI
      uses: azure/CLI@v1

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Run resource creation script
      run: |
        chmod +x infra/create-resources.sh
        ./infra/create-resources.sh \
          ${{ secrets.AZURE_RESOURCE_GROUP_DEV }} \
          ${{ secrets.AZURE_RESOURCE_GROUP_TEST }} \
          ${{ secrets.AZURE_LOCATION }} \
          ${{ secrets.AZURE_STORAGE_ACCOUNT_DEV }} \
          ${{ secrets.AZURE_STORAGE_ACCOUNT_TEST }} \
          ${{ secrets.AZURE_FUNCTIONAPP_NAME_DEV }} \
          ${{ secrets.AZURE_FUNCTIONAPP_NAME_TEST }} \
          ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}

  unit-tests:
    runs-on: ubuntu-latest
    needs: setup-environment

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run unit tests
      run: |
        pytest tests/unit

  integration-tests:
    runs-on: ubuntu-latest
    needs: unit-tests

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run integration tests
      run: |
        pytest tests/integration

  build-and-push-docker-dev:
    runs-on: ubuntu-latest
    needs: integration-tests

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to Azure Container Registry
      run: |
        echo ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }} | docker login ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }} -u ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }} --password-stdin

    - name: Build Docker image for dev
      run: |
        docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}/function_app_dev:latest ./function_app_dev

    - name: Push Docker image for dev
      run: |
        docker push ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}/function_app_dev:latest

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build-and-push-docker-dev

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Azure CLI
      uses: azure/CLI@v1

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure Function App (dev)
      run: |
        az functionapp config container set \
          --name ${{ secrets.AZURE_FUNCTIONAPP_NAME_DEV }} \
          --resource-group ${{ secrets.AZURE_RESOURCE_GROUP_DEV }} \
          --docker-custom-image-name ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}/function_app_dev:latest

  build-and-push-docker-test:
    runs-on: ubuntu-latest
    if: github.event.inputs.deploy-test == 'true'
    needs: integration-tests

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Log in to Azure Container Registry
      run: |
        echo ${{ secrets.AZURE_CONTAINER_REGISTRY_PASSWORD }} | docker login ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }} -u ${{ secrets.AZURE_CONTAINER_REGISTRY_USERNAME }} --password-stdin

    - name: Build Docker image for test
      run: |
        docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}/function_app_test:latest ./function_app_test

    - name: Push Docker image for test
      run: |
        docker push ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}/function_app_test:latest

  deploy-test:
    runs-on: ubuntu-latest
    if: github.event.inputs.deploy-test == 'true'
    needs: build-and-push-docker-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Azure CLI
      uses: azure/CLI@v1

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy to Azure Function App (test)
      run: |
        az functionapp config container set \
          --name ${{ secrets.AZURE_FUNCTIONAPP_NAME_TEST }} \
          --resource-group ${{ secrets.AZURE_RESOURCE_GROUP_TEST }} \
          --docker-custom-image-name ${{ secrets.AZURE_CONTAINER_REGISTRY_LOGIN_SERVER }}/function_app_test:latest
